name: CI/CD Backend

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  APP_NAME: antoinedemo
  APP_NAMESPACE: demo
  APP_PORT: 4000
  APP_HOST: backend.local
  APP_NODE_PORT: 32001

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.19.0'
      - name: Install dependencies
        run: npm ci
      - name: Build project
        run: npm run build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      - name: Extract version from package.json
        id: get_version
        run: echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:latest
            ${{ env.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:${{ env.VERSION }}
      - name: Deploy to Kubernetes
        env:
          APP_VERSION: ${{ env.VERSION }}
        run: |
          envsubst < .k8s/backend-deployment.yaml > .k8s/backend-deployment.final.yaml
          kubectl apply -f .k8s/backend-deployment.final.yaml